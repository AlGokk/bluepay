// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OrderCreated extends ethereum.Event {
  get params(): OrderCreated__Params {
    return new OrderCreated__Params(this);
  }
}

export class OrderCreated__Params {
  _event: OrderCreated;

  constructor(event: OrderCreated) {
    this._event = event;
  }

  get _seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _customer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _orderID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _status(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class OrderUpdated extends ethereum.Event {
  get params(): OrderUpdated__Params {
    return new OrderUpdated__Params(this);
  }
}

export class OrderUpdated__Params {
  _event: OrderUpdated;

  constructor(event: OrderUpdated) {
    this._event = event;
  }

  get _seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _customer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _orderID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _status(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class BlueberryPayOrderBook__getOrderResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: i32;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: i32,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class BlueberryPayOrderBook__getOrderDataResultValue0Struct extends ethereum.Tuple {
  get orderID(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get customer(): Address {
    return this[2].toAddress();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get deadline(): BigInt {
    return this[5].toBigInt();
  }
}

export class BlueberryPayOrderBook extends ethereum.SmartContract {
  static bind(address: Address): BlueberryPayOrderBook {
    return new BlueberryPayOrderBook("BlueberryPayOrderBook", address);
  }

  addOrder(
    _seller: Address,
    _customer: Address,
    _amount: BigInt,
    _orderID: BigInt,
    _status: i32
  ): boolean {
    let result = super.call(
      "addOrder",
      "addOrder(address,address,uint256,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_seller),
        ethereum.Value.fromAddress(_customer),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_status))
      ]
    );

    return result[0].toBoolean();
  }

  try_addOrder(
    _seller: Address,
    _customer: Address,
    _amount: BigInt,
    _orderID: BigInt,
    _status: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addOrder",
      "addOrder(address,address,uint256,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_seller),
        ethereum.Value.fromAddress(_customer),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_status))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  cancelOrder(_from: Address, _orderID: BigInt, status: i32): boolean {
    let result = super.call(
      "cancelOrder",
      "cancelOrder(address,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(status))
      ]
    );

    return result[0].toBoolean();
  }

  try_cancelOrder(
    _from: Address,
    _orderID: BigInt,
    status: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "cancelOrder",
      "cancelOrder(address,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(status))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  confirmReceiptTheCustomer(
    _from: Address,
    _orderID: BigInt,
    status: i32
  ): boolean {
    let result = super.call(
      "confirmReceiptTheCustomer",
      "confirmReceiptTheCustomer(address,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(status))
      ]
    );

    return result[0].toBoolean();
  }

  try_confirmReceiptTheCustomer(
    _from: Address,
    _orderID: BigInt,
    status: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "confirmReceiptTheCustomer",
      "confirmReceiptTheCustomer(address,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(status))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  deliveryTime(): BigInt {
    let result = super.call("deliveryTime", "deliveryTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_deliveryTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("deliveryTime", "deliveryTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOrder(param0: BigInt): BlueberryPayOrderBook__getOrderResult {
    let result = super.call(
      "getOrder",
      "getOrder(uint256):(uint256,address,address,uint8,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new BlueberryPayOrderBook__getOrderResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toI32(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_getOrder(
    param0: BigInt
  ): ethereum.CallResult<BlueberryPayOrderBook__getOrderResult> {
    let result = super.tryCall(
      "getOrder",
      "getOrder(uint256):(uint256,address,address,uint8,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BlueberryPayOrderBook__getOrderResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toI32(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  getOrderAmount(_orderID: BigInt): BigInt {
    let result = super.call(
      "getOrderAmount",
      "getOrderAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderID)]
    );

    return result[0].toBigInt();
  }

  try_getOrderAmount(_orderID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrderAmount",
      "getOrderAmount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_orderID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderData(
    _orderID: BigInt
  ): BlueberryPayOrderBook__getOrderDataResultValue0Struct {
    let result = super.call(
      "getOrderData",
      "getOrderData(uint256):((uint256,address,address,uint8,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_orderID)]
    );

    return changetype<BlueberryPayOrderBook__getOrderDataResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getOrderData(
    _orderID: BigInt
  ): ethereum.CallResult<
    BlueberryPayOrderBook__getOrderDataResultValue0Struct
  > {
    let result = super.tryCall(
      "getOrderData",
      "getOrderData(uint256):((uint256,address,address,uint8,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_orderID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<BlueberryPayOrderBook__getOrderDataResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getOrderStatus(_from: Address, _orderID: BigInt): i32 {
    let result = super.call(
      "getOrderStatus",
      "getOrderStatus(address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID)
      ]
    );

    return result[0].toI32();
  }

  try_getOrderStatus(
    _from: Address,
    _orderID: BigInt
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getOrderStatus",
      "getOrderStatus(address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  mediator(): Address {
    let result = super.call("mediator", "mediator():(address)", []);

    return result[0].toAddress();
  }

  try_mediator(): ethereum.CallResult<Address> {
    let result = super.tryCall("mediator", "mediator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paymentSystemUID(): Address {
    let result = super.call(
      "paymentSystemUID",
      "paymentSystemUID():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_paymentSystemUID(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "paymentSystemUID",
      "paymentSystemUID():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setState(_from: Address, _orderID: BigInt, status: i32): boolean {
    let result = super.call(
      "setState",
      "setState(address,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(status))
      ]
    );

    return result[0].toBoolean();
  }

  try_setState(
    _from: Address,
    _orderID: BigInt,
    status: i32
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "setState",
      "setState(address,uint256,uint8):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromUnsignedBigInt(_orderID),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(status))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  setStateCompleted(_orderID: BigInt): boolean {
    let result = super.call(
      "setStateCompleted",
      "setStateCompleted(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_orderID)]
    );

    return result[0].toBoolean();
  }

  try_setStateCompleted(_orderID: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "setStateCompleted",
      "setStateCompleted(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_orderID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddOrderCall extends ethereum.Call {
  get inputs(): AddOrderCall__Inputs {
    return new AddOrderCall__Inputs(this);
  }

  get outputs(): AddOrderCall__Outputs {
    return new AddOrderCall__Outputs(this);
  }
}

export class AddOrderCall__Inputs {
  _call: AddOrderCall;

  constructor(call: AddOrderCall) {
    this._call = call;
  }

  get _seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _customer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _orderID(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _status(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class AddOrderCall__Outputs {
  _call: AddOrderCall;

  constructor(call: AddOrderCall) {
    this._call = call;
  }

  get status(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _orderID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get status(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ConfirmReceiptTheCustomerCall extends ethereum.Call {
  get inputs(): ConfirmReceiptTheCustomerCall__Inputs {
    return new ConfirmReceiptTheCustomerCall__Inputs(this);
  }

  get outputs(): ConfirmReceiptTheCustomerCall__Outputs {
    return new ConfirmReceiptTheCustomerCall__Outputs(this);
  }
}

export class ConfirmReceiptTheCustomerCall__Inputs {
  _call: ConfirmReceiptTheCustomerCall;

  constructor(call: ConfirmReceiptTheCustomerCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _orderID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get status(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class ConfirmReceiptTheCustomerCall__Outputs {
  _call: ConfirmReceiptTheCustomerCall;

  constructor(call: ConfirmReceiptTheCustomerCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _paymentSystemUID(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _mediator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SetDeliveryTimeCall extends ethereum.Call {
  get inputs(): SetDeliveryTimeCall__Inputs {
    return new SetDeliveryTimeCall__Inputs(this);
  }

  get outputs(): SetDeliveryTimeCall__Outputs {
    return new SetDeliveryTimeCall__Outputs(this);
  }
}

export class SetDeliveryTimeCall__Inputs {
  _call: SetDeliveryTimeCall;

  constructor(call: SetDeliveryTimeCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _days(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDeliveryTimeCall__Outputs {
  _call: SetDeliveryTimeCall;

  constructor(call: SetDeliveryTimeCall) {
    this._call = call;
  }
}

export class SetStateCall extends ethereum.Call {
  get inputs(): SetStateCall__Inputs {
    return new SetStateCall__Inputs(this);
  }

  get outputs(): SetStateCall__Outputs {
    return new SetStateCall__Outputs(this);
  }
}

export class SetStateCall__Inputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _orderID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get status(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetStateCall__Outputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetStateCompletedCall extends ethereum.Call {
  get inputs(): SetStateCompletedCall__Inputs {
    return new SetStateCompletedCall__Inputs(this);
  }

  get outputs(): SetStateCompletedCall__Outputs {
    return new SetStateCompletedCall__Outputs(this);
  }
}

export class SetStateCompletedCall__Inputs {
  _call: SetStateCompletedCall;

  constructor(call: SetStateCompletedCall) {
    this._call = call;
  }

  get _orderID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStateCompletedCall__Outputs {
  _call: SetStateCompletedCall;

  constructor(call: SetStateCompletedCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
